
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
     - "${DB_POSTGRES_PORT}:5432"
    restart: always
    env_file: ../.env
    environment:
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      POSTGRES_USER: ${DB_POSTGRES_USERNAME}
      POSTGRES_DB: ${DB_POSTGRES_NAME}
      ENVIRONMENT: ${ENVIRONMENT}
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis_db:
    container_name: redis_db
    image: redis:latest
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    env_file: ../.env
    environment:
      ENVIRONMENT: PROD
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/var/lib/redis/data

  celery:
    container_name: celery
    restart: always
    env_file: ../.env
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile
    environment:
      DB_POSTGRES_HOST: ${DB_POSTGRES_HOST}
      REDIS_HOST: ${REDIS_HOST}
    command: celery -A app.worker.celery worker --loglevel=info
    depends_on:
      - postgres
      - redis_db
volumes:
  pg_data:
  redis-data: